{"ast":null,"code":"import _classCallCheck from \"C:/Users/245123/Desktop/WTFIndexer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/245123/Desktop/WTFIndexer/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/checkbox\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/grid-list\";\nimport * as i8 from \"@angular/cdk/text-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/paginator\";\nimport * as i11 from \"@angular/material/sort\";\nimport * as i12 from \"@angular/material/table\";\nvar _c0 = [\"episodePaginator\"];\nvar _c1 = [\"imdbPaginator\"];\n\nfunction WTFIndexerComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function WTFIndexerComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateButtonClicked());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_mat_grid_list_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-list\", 10)(1, \"mat-grid-tile\", 1)(2, \"div\", 11)(3, \"span\", 12);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", 13);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(6, \"svg\", 14);\n    i0.ɵɵelement(7, \"circle\", 15);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colspan\", 4)(\"rowspan\", 2);\n  }\n}\n\nfunction WTFIndexerComponent_mat_grid_list_15_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function WTFIndexerComponent_mat_grid_list_15_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.editEpisodesIMDBNamesClick());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(!ctx_r7.isBeingEdited ? \"Edit\" : \"Save\");\n  }\n}\n\nfunction WTFIndexerComponent_mat_grid_list_15_mat_grid_tile_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 1)(1, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function WTFIndexerComponent_mat_grid_list_15_mat_grid_tile_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.editEpisodesIMDBNamesClick(true));\n    });\n    i0.ɵɵtext(2, \"Cancel\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"colspan\", 2)(\"rowspan\", 3);\n  }\n}\n\nfunction WTFIndexerComponent_mat_grid_list_15_mat_form_field_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function WTFIndexerComponent_mat_grid_list_15_mat_form_field_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.filterValue = $event);\n    })(\"keyup\", function WTFIndexerComponent_mat_grid_list_15_mat_form_field_6_Template_input_keyup_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      var ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.applyFilter($event.target.value));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.filterValue);\n  }\n}\n\nvar _c2 = function _c2() {\n  return [10000, 2, 25, 50, 100];\n};\n\nfunction WTFIndexerComponent_mat_grid_list_15_mat_paginator_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-paginator\", 27, 28);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(1, _c2));\n  }\n}\n\nfunction WTFIndexerComponent_mat_grid_list_15_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-list\", 16)(1, \"mat-grid-tile\", 1);\n    i0.ɵɵtemplate(2, WTFIndexerComponent_mat_grid_list_15_button_2_Template, 2, 1, \"button\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, WTFIndexerComponent_mat_grid_list_15_mat_grid_tile_3_Template, 3, 2, \"mat-grid-tile\", 18);\n    i0.ɵɵelement(4, \"mat-grid-tile\", 1);\n    i0.ɵɵelementStart(5, \"mat-grid-tile\", 19);\n    i0.ɵɵtemplate(6, WTFIndexerComponent_mat_grid_list_15_mat_form_field_6_Template, 2, 1, \"mat-form-field\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-grid-tile\", 1)(8, \"mat-checkbox\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function WTFIndexerComponent_mat_grid_list_15_Template_mat_checkbox_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      var ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.isFavoritesChecked = $event);\n    })(\"change\", function WTFIndexerComponent_mat_grid_list_15_Template_mat_checkbox_change_8_listener() {\n      i0.ɵɵrestoreView(_r20);\n      var ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.chkFavoritesClick());\n    });\n    i0.ɵɵtext(9, \"Favorites\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"mat-grid-tile\", 1)(11, \"mat-checkbox\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function WTFIndexerComponent_mat_grid_list_15_Template_mat_checkbox_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      var ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.descriptionVisible = $event);\n    })(\"change\", function WTFIndexerComponent_mat_grid_list_15_Template_mat_checkbox_change_11_listener() {\n      i0.ɵɵrestoreView(_r20);\n      var ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.chkShowhideDescription());\n    });\n    i0.ɵɵtext(12, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"mat-grid-tile\", 1);\n    i0.ɵɵtemplate(14, WTFIndexerComponent_mat_grid_list_15_mat_paginator_14_Template, 2, 2, \"mat-paginator\", 23);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colspan\", 2)(\"rowspan\", 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.editingAllowed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isBeingEdited);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colspan\", 6)(\"rowspan\", 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colspan\", 5)(\"rowspan\", 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isBeingEdited && !ctx_r2.isFavoritesChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colspan\", 3)(\"rowspan\", 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.isFavoritesChecked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"colspan\", 3)(\"rowspan\", 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.descriptionVisible);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"colspan\", 11)(\"rowspan\", 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isLoading);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 42);\n    i0.ɵɵtext(1, \" Ep # \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r39 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r39.EpisodeNumber, \" \");\n  }\n}\n\nfunction WTFIndexerComponent_table_16_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 42);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r40 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r40.Name, \" \");\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 44);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r40 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", element_r40.IMDBLink, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_6_mat_form_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"textarea\", 45, 46);\n    i0.ɵɵlistener(\"placeholder\", function WTFIndexerComponent_table_16_td_6_mat_form_field_3_Template_textarea_placeholder_1_listener() {\n      i0.ɵɵrestoreView(_r48);\n      var ctx_r47 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r47.Edit);\n    })(\"ngModelChange\", function WTFIndexerComponent_table_16_td_6_mat_form_field_3_Template_textarea_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      var element_r40 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(element_r40.Name = $event);\n    })(\"change\", function WTFIndexerComponent_table_16_td_6_mat_form_field_3_Template_textarea_change_1_listener() {\n      i0.ɵɵrestoreView(_r48);\n      var element_r40 = i0.ɵɵnextContext().$implicit;\n      var ctx_r51 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r51.WTFItemUpdated(element_r40.EpisodeNumber));\n    });\n    i0.ɵɵtext(3, \"                    \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var element_r40 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", element_r40.Name);\n    i0.ɵɵproperty(\"ngModel\", element_r40.Name);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵtemplate(1, WTFIndexerComponent_table_16_td_6_div_1_Template, 2, 1, \"div\", 20);\n    i0.ɵɵtemplate(2, WTFIndexerComponent_table_16_td_6_div_2_Template, 2, 1, \"div\", 20);\n    i0.ɵɵtemplate(3, WTFIndexerComponent_table_16_td_6_mat_form_field_3_Template, 4, 2, \"mat-form-field\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r40 = ctx.$implicit;\n    var ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !element_r40.IMDBLink && !ctx_r27.isBeingEdited);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r40.IMDBLink && !ctx_r27.isBeingEdited);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r27.isBeingEdited);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_ng_container_7_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 42);\n    i0.ɵɵtext(1, \" Description \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_ng_container_7_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r56 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r56.Description, \" \");\n  }\n}\n\nfunction WTFIndexerComponent_table_16_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 47);\n    i0.ɵɵtemplate(1, WTFIndexerComponent_table_16_ng_container_7_th_1_Template, 2, 0, \"th\", 31);\n    i0.ɵɵtemplate(2, WTFIndexerComponent_table_16_ng_container_7_td_2_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 42);\n    i0.ɵɵtext(1, \" Release Date \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r57 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r57.ReleaseDate, \" \");\n  }\n}\n\nfunction WTFIndexerComponent_table_16_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 42);\n    i0.ɵɵtext(1, \" Favorite \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r60 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 43)(1, \"img\", 48);\n    i0.ɵɵlistener(\"change\", function WTFIndexerComponent_table_16_td_13_Template_img_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r60);\n      var ctx_r59 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r59.episodeFavoriteClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var element_r58 = ctx.$implicit;\n    var ctx_r32 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", element_r58.EpisodeNumber);\n    i0.ɵɵproperty(\"src\", ctx_r32.getFavoriteImage(element_r58.Favorite), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 42);\n    i0.ɵɵtext(1, \" Check In/Out \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r63 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 43)(1, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function WTFIndexerComponent_table_16_td_16_Template_button_click_1_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r63);\n      var element_r61 = restoredCtx.$implicit;\n      var ctx_r62 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r62.checkInOutFileClick(element_r61.EpisodeNumber, element_r61.IsCheckedOut));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var element_r61 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(element_r61.IsCheckedOut == false ? \"Check Out\" : \"Check In\");\n  }\n}\n\nfunction WTFIndexerComponent_table_16_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" IsModified \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_16_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵelement(1, \"mat-checkbox\", 51);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r64 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"checked\", element_r64.IsModified);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 52);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 53);\n  }\n}\n\nfunction WTFIndexerComponent_table_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 29);\n    i0.ɵɵelementContainerStart(1, 30);\n    i0.ɵɵtemplate(2, WTFIndexerComponent_table_16_th_2_Template, 2, 0, \"th\", 31);\n    i0.ɵɵtemplate(3, WTFIndexerComponent_table_16_td_3_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(4, 33);\n    i0.ɵɵtemplate(5, WTFIndexerComponent_table_16_th_5_Template, 2, 0, \"th\", 31);\n    i0.ɵɵtemplate(6, WTFIndexerComponent_table_16_td_6_Template, 4, 3, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(7, WTFIndexerComponent_table_16_ng_container_7_Template, 3, 0, \"ng-container\", 34);\n    i0.ɵɵelementContainerStart(8, 35);\n    i0.ɵɵtemplate(9, WTFIndexerComponent_table_16_th_9_Template, 2, 0, \"th\", 31);\n    i0.ɵɵtemplate(10, WTFIndexerComponent_table_16_td_10_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(11, 36);\n    i0.ɵɵtemplate(12, WTFIndexerComponent_table_16_th_12_Template, 2, 0, \"th\", 31);\n    i0.ɵɵtemplate(13, WTFIndexerComponent_table_16_td_13_Template, 2, 2, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(14, 37);\n    i0.ɵɵtemplate(15, WTFIndexerComponent_table_16_th_15_Template, 2, 0, \"th\", 31);\n    i0.ɵɵtemplate(16, WTFIndexerComponent_table_16_td_16_Template, 3, 1, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(17, 38);\n    i0.ɵɵtemplate(18, WTFIndexerComponent_table_16_th_18_Template, 2, 0, \"th\", 39);\n    i0.ɵɵtemplate(19, WTFIndexerComponent_table_16_td_19_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(20, WTFIndexerComponent_table_16_tr_20_Template, 1, 0, \"tr\", 40);\n    i0.ɵɵtemplate(21, WTFIndexerComponent_table_16_tr_21_Template, 1, 0, \"tr\", 41);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r3.episodesDataSource);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.descriptionVisible);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r3.episodeDisplayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r3.episodeDisplayedColumns);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" ID \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r76 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r76.ID, \" \");\n  }\n}\n\nfunction WTFIndexerComponent_table_17_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r77 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r77.Name, \" \");\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_6_mat_form_field_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r82 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"input\", 58);\n    i0.ɵɵlistener(\"placeholder\", function WTFIndexerComponent_table_17_td_6_mat_form_field_2_Template_input_placeholder_1_listener() {\n      i0.ɵɵrestoreView(_r82);\n      var ctx_r81 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r81.Name);\n    })(\"ngModelChange\", function WTFIndexerComponent_table_17_td_6_mat_form_field_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r82);\n      var element_r77 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(element_r77.Name = $event);\n    })(\"change\", function WTFIndexerComponent_table_17_td_6_mat_form_field_2_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r82);\n      var element_r77 = i0.ɵɵnextContext().$implicit;\n      var ctx_r85 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r85.IMDBItemUpdated(element_r77.ID));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var element_r77 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", element_r77.Name);\n    i0.ɵɵproperty(\"ngModel\", element_r77.Name);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵtemplate(1, WTFIndexerComponent_table_17_td_6_div_1_Template, 2, 1, \"div\", 20);\n    i0.ɵɵtemplate(2, WTFIndexerComponent_table_17_td_6_mat_form_field_2_Template, 2, 2, \"mat-form-field\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r69 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r69.isBeingEdited);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r69.isBeingEdited);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" IMDB URL \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r88 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r88.IMDBURL, \" \");\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_9_mat_form_field_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r93 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"input\", 59);\n    i0.ɵɵlistener(\"placeholder\", function WTFIndexerComponent_table_17_td_9_mat_form_field_2_Template_input_placeholder_1_listener() {\n      i0.ɵɵrestoreView(_r93);\n      var ctx_r92 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r92.IMDB_URL);\n    })(\"ngModelChange\", function WTFIndexerComponent_table_17_td_9_mat_form_field_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r93);\n      var element_r88 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(element_r88.IMDBURL = $event);\n    })(\"change\", function WTFIndexerComponent_table_17_td_9_mat_form_field_2_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r93);\n      var element_r88 = i0.ɵɵnextContext().$implicit;\n      var ctx_r96 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r96.IMDBItemUpdated(element_r88.ID));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var element_r88 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", element_r88.IMDBURL);\n    i0.ɵɵproperty(\"ngModel\", element_r88.IMDBURL);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵtemplate(1, WTFIndexerComponent_table_17_td_9_div_1_Template, 2, 1, \"div\", 20);\n    i0.ɵɵtemplate(2, WTFIndexerComponent_table_17_td_9_mat_form_field_2_Template, 2, 2, \"mat-form-field\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r71 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r71.isBeingEdited);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r71.isBeingEdited);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 50);\n    i0.ɵɵtext(1, \" IsModified \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WTFIndexerComponent_table_17_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 43);\n    i0.ɵɵelement(1, \"mat-checkbox\", 51);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r99 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"checked\", element_r99.IsModified);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 52);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 53);\n  }\n}\n\nfunction WTFIndexerComponent_table_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 54);\n    i0.ɵɵelementContainerStart(1, 55);\n    i0.ɵɵtemplate(2, WTFIndexerComponent_table_17_th_2_Template, 2, 0, \"th\", 39);\n    i0.ɵɵtemplate(3, WTFIndexerComponent_table_17_td_3_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(4, 56);\n    i0.ɵɵtemplate(5, WTFIndexerComponent_table_17_th_5_Template, 2, 0, \"th\", 39);\n    i0.ɵɵtemplate(6, WTFIndexerComponent_table_17_td_6_Template, 3, 2, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(7, 57);\n    i0.ɵɵtemplate(8, WTFIndexerComponent_table_17_th_8_Template, 2, 0, \"th\", 39);\n    i0.ɵɵtemplate(9, WTFIndexerComponent_table_17_td_9_Template, 3, 2, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(10, 38);\n    i0.ɵɵtemplate(11, WTFIndexerComponent_table_17_th_11_Template, 2, 0, \"th\", 39);\n    i0.ɵɵtemplate(12, WTFIndexerComponent_table_17_td_12_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(13, WTFIndexerComponent_table_17_tr_13_Template, 1, 0, \"tr\", 40);\n    i0.ɵɵtemplate(14, WTFIndexerComponent_table_17_tr_14_Template, 1, 0, \"tr\", 41);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r4.imdbDataSource);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r4.imdbDisplayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r4.imdbDisplayedColumns);\n  }\n}\n\nexport var WTFIndexerComponent = /*#__PURE__*/function () {\n  function WTFIndexerComponent(dataService) {\n    _classCallCheck(this, WTFIndexerComponent);\n\n    this.dataService = dataService;\n    this.checkoutAllowed = false;\n    this.descriptionVisible = false;\n    this.editingAllowed = true;\n    this.episodeDisplayedColumns = ['Episode', 'Name', 'ReleaseDate', 'Favorite'];\n    this.imdbDisplayedColumns = ['ID', 'Name', 'IMDBURL']; //,'isModified'\n\n    this.isBeingEdited = false;\n    this.isLoaded = false;\n    this.isLoading = true;\n    this.isFavoritesChecked = false;\n    this.title = \"WTF Indexer\";\n  }\n\n  _createClass(WTFIndexerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (localStorage.getItem('BackEndURL') != null) this.dataService.backendURL = localStorage.getItem('BackEndURL');\n      this.getEpisodes();\n      if (this.checkoutAllowed) this.episodeDisplayedColumns.push(\"Check In/Out\");\n      if (this.descriptionVisible) this.episodeDisplayedColumns.splice(2, 0, 'Description');\n      /*if (window.outerWidth <= window.outerHeight) {\r\n           alert(\"Please rotate your phone to landscape mode\");\r\n      }*/\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter(filterValue) {\n      this.episodesDataSource.filter = filterValue;\n      this.imdbDataSource.filter = filterValue;\n    }\n  }, {\n    key: \"checkInOutFileClick\",\n    value: function checkInOutFileClick(epNumber, isCheckedOut) {\n      var _this = this;\n\n      if (epNumber == null) return; // get episodes from the data service\n\n      this.dataService.checkEpisodeInOut(epNumber, isCheckedOut).subscribe(function (response) {\n        _this.WTFPayload.find(function (episode) {\n          return episode.EpisodeNumber === epNumber;\n        }).IsCheckedOut = !isCheckedOut;\n        /*if (response === false) {\r\n             alert(`Unable to check ${(isCheckedOut == true ? \"in\" : \"out\")} the requested episode`)\r\n             return;\r\n        } else {\r\n             this.WTFPayload.find(episode => episode.EpisodeNumber === epNumber).IsCheckedOut=!isCheckedOut;\r\n        }*/\n      }, function (error) {\n        alert(\"An error occurred checking \\\" + \".concat(isCheckedOut === false ? \"in\" : \"out\", \" + \\\"the episode\"));\n        console.log(\"An error occurred \".concat(isCheckedOut === false ? \"in\" : \"out\", \" episode from the data service with error \").concat(error));\n      });\n    }\n  }, {\n    key: \"chkFavoritesClick\",\n    value: function chkFavoritesClick() {\n      var _this2 = this;\n\n      this.dataService.getEpisodes(this.isFavoritesChecked).subscribe(function (episodes) {\n        _this2.WTFPayload = episodes; // Assign the payload as the table data source\n\n        _this2.episodesDataSource = new MatTableDataSource(_this2.WTFPayload); // Assign custom filter function\n\n        _this2.episodesDataSource.filterPredicate = _this2.createEpisodeFilter(); // Assign paginator\n\n        _this2.episodesDataSource.paginator = _this2.episodePaginator; // Assign sort\n\n        _this2.episodesDataSource.sort = _this2.sort;\n\n        if (_this2.isFavoritesChecked == true) {\n          _this2.chkFavoritesClick();\n        }\n\n        _this2.getIMDBNames(); // Apply search filters\n\n\n        _this2.createEpisodeFilter();\n      }, function (error) {\n        alert(\"An error occurred getting the episodes\");\n        console.log(\"An error occurred getting the episodes from the data service with error \".concat(error));\n        _this2.isLoading = false;\n      });\n    }\n  }, {\n    key: \"chkShowhideDescription\",\n    value: function chkShowhideDescription() {\n      if (this.descriptionVisible) {\n        this.episodeDisplayedColumns.splice(2, 0, 'Description');\n      } else {\n        this.episodeDisplayedColumns.splice(2, 1);\n      }\n    } // Custom Material UI table filter function\n\n  }, {\n    key: \"createEpisodeFilter\",\n    value: function createEpisodeFilter() {\n      var delimiter = \":\";\n      if (this.isLoading) return;\n\n      var filterFunction = function filterFunction(data, filter) {\n        var _this3 = this;\n\n        /*if (typeof this.isFavoritesChecked === 'undefined') {\r\n            console.log(\"null\");\r\n            return null;\r\n        }*/\n        var customSearch = function customSearch() {\n          var found = false; // Slows the app down significantly\n          // Custom filter identifiers to search specific columns\n\n          /*if (filter.indexOf(delimiter) !== -1 && filter.split(delimiter).length == 2) {\r\n               var filterParams=filter.split(delimiter);\r\n                 switch(filterParams[0].toLowerCase()) {\r\n                    case \"epnum\":\r\n                         return data.EpisodeNumber === filterParams[1] && (data.isFavoritesChecked === false || (data.isFavoritesChecked === true && parseInt(data.Favorite) === 1));\r\n                    case \"name\":\r\n                         return data.name ===\"\" || (data.Name.includes(filterParams[1]) === true && (data.isFavoritesChecked === false || (data.isFavoritesChecked === true && parseInt(data.Favorite) === 1)));\r\n                    case \"year\":\r\n                         return data.ReleaseDate.includes(\", \" + filterParams[1]) === true && (data.isFavoritesChecked === false || (data.isFavoritesChecked === true && parseInt(data.Favorite) === 1));\r\n               }\r\n          } else if (data.EpisodeNumber === filter || data.Name.includes(filter) === true || data.ReleaseDate.indexOf(filter) !== -1) {\r\n               if (data.isFavoritesChecked === false) {\r\n                    console.log(\"true 1\");\r\n                    found=true;\r\n               } else if (parseInt(data.Favorite) === 1) {\r\n                    console.log(\"true 2\");\r\n                    found=true;\r\n               }\r\n          }/* /*else {\r\n               if (data.isFavoritesChecked === false) {\r\n                    found=true;\r\n               } else if (parseInt(data.Favorite) === 1) {\r\n                    found=true;\r\n               }\r\n          }*/\n          // First match the episode number name and/or release date\n\n          if (filter == data.EpisodeNumber.toString() || data.Name.trim() !== \"\" && data.Name.toLowerCase().includes(filter.toLowerCase()) === true || data.ReleaseDate.toString().startsWith(filter)) {\n            if (_this3.isFavoritesChecked) {\n              if (_this3.data.Favorite === true) return true;else return false;\n            } else return true;\n          }\n\n          return found;\n        };\n\n        return customSearch();\n      };\n\n      return filterFunction;\n    } // Custom Material UI table filter function\n\n  }, {\n    key: \"createIMDBFilter\",\n    value: function createIMDBFilter() {\n      var delimiter = \":\";\n\n      var filterFunction = function filterFunction(data, filter) {\n        var customSearch = function customSearch() {\n          var found = false; // First match the episode number name and/or release date\n\n          if (data.Name.toLowerCase().includes(filter.toLowerCase()) === true || data.IMDBURL.toLowerCase().includes(filter.toLowerCase()) === true) {\n            found = true;\n          }\n\n          return found;\n        };\n\n        return customSearch();\n      };\n\n      return filterFunction;\n    }\n  }, {\n    key: \"editEpisodesIMDBNamesClick\",\n    value: function editEpisodesIMDBNamesClick(canceled) {\n      if (!this.editingAllowed) return;\n\n      if (this.episodePaginator.pageSize > 100) {\n        alert(\"Editing can only be done on 100 or less episodes at a time. Change the items per page to 100 or less\");\n        return;\n      }\n\n      if (!canceled) {\n        // Saving\n        var modifiedWTF = this.WTFPayload.filter(function (episode) {\n          return episode.IsModified === true;\n        });\n        var modifiedIMDB = this.IMDBPayload.filter(function (IMDB) {\n          return IMDB.IsModified === true;\n        });\n\n        if (modifiedWTF.length > 0) {\n          this.dataService.updateEpisodes(modifiedWTF).subscribe(function () {}, function (error) {\n            alert(\"An error occurred saving the WTF data\");\n            console.log(\"An error occurred saving the WTF data from the data service with error \".concat(error));\n          });\n        }\n\n        if (modifiedIMDB.length > 0) {\n          this.dataService.updateIMDB(modifiedIMDB).subscribe(function () {}, function (error) {\n            alert(\"An error occurred saving the IMDB data\");\n            console.log(\"An error occurred saving the IMDB data from the data service with error \".concat(error));\n          });\n        }\n      } else {// Canceling\n      }\n\n      this.getEpisodes();\n      this.getIMDBNames();\n      this.isBeingEdited = !this.isBeingEdited;\n    }\n  }, {\n    key: \"episodeEditClick\",\n    value: function episodeEditClick($event) {\n      var epNumber = $event.target.id;\n      if (epNumber == null) return; // Get object based on matching episode number\n\n      var obj = this.WTFPayload.find(function (episode) {\n        return episode.EpisodeNumber === epNumber;\n      });\n      obj.IsBeingEdited = !obj.IsBeingEdited;\n    }\n  }, {\n    key: \"episodeFavoriteClick\",\n    value: function episodeFavoriteClick($event) {\n      var _this4 = this;\n\n      var epNumber = $event.target.id;\n      if (epNumber == null) return; // Get object based on matching episode number\n\n      var obj = this.WTFPayload.find(function (episode) {\n        return episode.EpisodeNumber === parseInt(epNumber);\n      });\n      var favoriteValue = !obj.Favorite; // Subscribe to data service to update the favorite\n\n      this.dataService.updateEpisodeFavorite(epNumber, favoriteValue).subscribe(function () {\n        if (obj.Favorite == null || obj.Favorite == 0) obj.Favorite = 1;else if (obj.Favorite == 1) obj.Favorite = 0; // After updating the favorite, filter the data if favorites is checked because if Favorites is checked and the user unselects a favorite, it will be removed from the filter\n\n        if (_this4.isFavoritesChecked == true) {\n          _this4.applyFilter(\" \");\n        }\n      }, function (error) {\n        alert(\"An error occurred updating the favorite\");\n        console.log(\"An error occurred updating the favorite from the data service with error \".concat(error));\n      });\n    }\n  }, {\n    key: \"getEpisodes\",\n    value: function getEpisodes() {\n      var _this5 = this;\n\n      if (this.dataService.getBackEndURL() === \"\") {\n        alert(\"The backend URL is not set\");\n        this.isLoading = false;\n        return;\n      } else {\n        localStorage.setItem('BackEndURL', this.dataService.getBackEndURL());\n      }\n\n      this.isLoaded = false; // get episodes from the data service\n\n      this.dataService.getEpisodes(this.isFavoritesChecked).subscribe(function (episodes) {\n        _this5.isLoading = false;\n        _this5.isLoaded = true;\n        _this5.WTFPayload = episodes; // Assign the payload as the table data source\n\n        _this5.episodesDataSource = new MatTableDataSource(_this5.WTFPayload); // Assign custom filter function\n\n        _this5.episodesDataSource.filterPredicate = _this5.createEpisodeFilter(); // Assign paginator\n\n        _this5.episodesDataSource.paginator = _this5.episodePaginator; // Assign sort\n\n        _this5.episodesDataSource.sort = _this5.sort;\n\n        if (_this5.isFavoritesChecked == true) {\n          _this5.chkFavoritesClick();\n        }\n\n        _this5.getIMDBNames();\n      }, function (error) {\n        alert(\"An error occurred getting the episodes\");\n        console.log(\"An error occurred getting the episodes from the data service with error \".concat(error));\n        _this5.isLoading = false;\n      });\n    }\n  }, {\n    key: \"getIMDBNames\",\n    value: function getIMDBNames() {\n      var _this6 = this;\n\n      // Get IMDB names\n      this.dataService.getIMDBNames().subscribe(function (IMDBNames) {\n        _this6.IMDBPayload = IMDBNames; // Assign the payload as the table data source\n\n        _this6.imdbDataSource = new MatTableDataSource(_this6.IMDBPayload); // Assign custom filter function\n\n        _this6.imdbDataSource.filterPredicate = _this6.createIMDBFilter(); // Assign paginator\n\n        _this6.imdbDataSource.paginator = _this6.imdbPaginator;\n        /*if (this.isFavoritesChecked == true) {\r\n             this.chkFavoritesClick();\r\n        }*/\n      }, function (error) {\n        alert(\"An error occurred getting the IMDB names\");\n        console.log(\"An error occurred getting the IMDB names from the data service with error \".concat(error));\n      });\n    }\n  }, {\n    key: \"getEditImage\",\n    value: function getEditImage(epNumber) {\n      if (epNumber == null) return; // Get object based on matching episode number\n\n      var obj = this.WTFPayload.find(function (episode) {\n        return episode.EpisodeNumber === epNumber;\n      }); // Return the right image if we are in edit or save mode\n\n      return obj.IsBeingEdited == true ? \"assets/save.png\" : \"assets/edit.png\";\n    }\n  }, {\n    key: \"getFavoriteImage\",\n    value: function getFavoriteImage(favorite) {\n      return favorite != 1 ? \"assets/heart-outline.png\" : \"assets/heart.png\";\n    }\n  }, {\n    key: \"IMDBItemUpdated\",\n    value: function IMDBItemUpdated(IMDBId) {\n      if (IMDBId === null) return; // Get object based on matching episode number\n\n      this.IMDBPayload.find(function (IMDB) {\n        return IMDB.ID === IMDBId;\n      }).IsModified = true;\n    }\n  }, {\n    key: \"updateButtonClicked\",\n    value: function updateButtonClicked() {\n      var _this7 = this;\n\n      this.dataService.scrapeData(this.WTFPayload.length).subscribe(function () {\n        _this7.getEpisodes();\n\n        alert(\"Update is complete\");\n      }, function (error) {\n        alert(\"An error occurred scraping the data\");\n        console.log(\"An error occurred scraping the data from the data service with error \".concat(error));\n      });\n    } // Push the status of the Favorites checkbox to the payload so it can be used in the filter\n\n    /*updateFavoriteCheckboxStatus() {\r\n         for (let i=0;i<this.WTFPayload.length;i++) {\r\n              this.WTFPayload[i][\"isFavoritesChecked\"]=this.isFavoritesChecked;\r\n         }\r\n    }*/\n\n  }, {\n    key: \"WTFItemUpdated\",\n    value: function WTFItemUpdated(epNumber) {\n      if (epNumber === null) return; // Get object based on matching episode number\n\n      this.WTFPayload.find(function (episode) {\n        return episode.EpisodeNumber === epNumber;\n      }).IsModified = true;\n    }\n  }]);\n\n  return WTFIndexerComponent;\n}();\n\nWTFIndexerComponent.ɵfac = function WTFIndexerComponent_Factory(t) {\n  return new (t || WTFIndexerComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\n\nWTFIndexerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WTFIndexerComponent,\n  selectors: [[\"app-wtfindexer\"]],\n  viewQuery: function WTFIndexerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.episodePaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imdbPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 18,\n  vars: 17,\n  consts: [[\"id\", \"header\", \"cols\", \"12\", \"rowHeight\", \"50px\"], [3, \"colspan\", \"rowspan\"], [\"matInput\", \"\", \"placeholder\", \"Backend URL\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"loadButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"id\", \"updateButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"cols\", \"4\", \"rowHeight\", \"150px\", 4, \"ngIf\"], [\"id\", \"options\", \"cols\", \"11\", \"rowHeight\", \"20px\", 4, \"ngIf\"], [\"mat-table\", \"\", \"matSort\", \"\", \"class\", \"episodeTable mat-elevation-z8\", 3, \"dataSource\", 4, \"ngIf\"], [\"mat-table\", \"\", \"class\", \"mat-elevation-z8 imdbTable\", 3, \"dataSource\", 4, \"ngIf\"], [\"id\", \"updateButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"cols\", \"4\", \"rowHeight\", \"150px\"], [1, \"app-loading\"], [1, \"loading\"], [1, \"logo\"], [\"viewBox\", \"25 25 50 50\", 1, \"spinner\"], [\"cx\", \"50\", \"cy\", \"50\", \"r\", \"20\", \"fill\", \"none\", \"stroke-width\", \"2\", \"stroke-miterlimit\", \"10\", 1, \"path\"], [\"id\", \"options\", \"cols\", \"11\", \"rowHeight\", \"20px\"], [\"id\", \"editButton\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\", 4, \"ngIf\"], [3, \"colspan\", \"rowspan\", 4, \"ngIf\"], [\"id\", \"filter\", 3, \"colspan\", \"rowspan\"], [4, \"ngIf\"], [\"id\", \"chkFavorites\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"id\", \"chkShowDescription\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"class\", \"episodePaginator\", \"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\", 4, \"ngIf\"], [\"id\", \"editButton\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 2, \"margin-left\", \"25px\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Filter\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [\"showFirstLastButtons\", \"\", 1, \"episodePaginator\", 3, \"pageSizeOptions\"], [\"episodePaginator\", \"\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"episodeTable\", \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"Episode\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"ng-class\", \"nameColumn\", \"matColumnDef\", \"Name\"], [\"class\", \"descriptionColumn\", \"matColumnDef\", \"Description\", 4, \"ngIf\"], [\"matColumnDef\", \"ReleaseDate\"], [\"matColumnDef\", \"Favorite\"], [\"matColumnDef\", \"Check In/Out\"], [\"matColumnDef\", \"isModified\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [3, \"innerHtml\"], [\"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"1\", \"cdkAutosizeMaxRows\", \"5\", \"matInput\", \"\", \"name\", \"edit\", \"type\", \"text\", 3, \"value\", \"ngModel\", \"placeholder\", \"ngModelChange\", \"change\"], [\"autosize\", \"cdkTextareaAutosize\"], [\"matColumnDef\", \"Description\", 1, \"descriptionColumn\"], [\"alt\", \"Favorite icon\", 2, \"width\", \"24px\", \"height\", \"24px\", 3, \"src\", \"id\", \"change\"], [\"id\", \"checkoutButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-header-cell\", \"\"], [\"disabled\", \"\", 3, \"checked\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", \"imdbTable\", 3, \"dataSource\"], [\"matColumnDef\", \"ID\"], [\"matColumnDef\", \"Name\", 1, \"imdbInputField\"], [\"matColumnDef\", \"IMDBURL\", 1, \"imdbInputField\"], [\"matInput\", \"\", \"name\", \"name\", \"type\", \"text\", 3, \"value\", \"ngModel\", \"placeholder\", \"ngModelChange\", \"change\"], [\"matInput\", \"\", \"name\", \"IMDBURL\", \"type\", \"text\", 3, \"value\", \"ngModel\", \"placeholder\", \"ngModelChange\", \"change\"]],\n  template: function WTFIndexerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-grid-list\", 0)(1, \"mat-grid-tile\", 1)(2, \"h1\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"mat-grid-tile\", 1)(5, \"mat-form-field\");\n      i0.ɵɵtext(6, \" Backend URL \");\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function WTFIndexerComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.dataService.backendURL = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"mat-grid-tile\", 1)(9, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function WTFIndexerComponent_Template_button_click_9_listener() {\n        return ctx.getEpisodes();\n      });\n      i0.ɵɵtext(10, \"Load\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"mat-grid-tile\", 1);\n      i0.ɵɵelementStart(12, \"mat-grid-tile\", 1);\n      i0.ɵɵtemplate(13, WTFIndexerComponent_button_13_Template, 2, 0, \"button\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, WTFIndexerComponent_mat_grid_list_14_Template, 8, 2, \"mat-grid-list\", 5);\n      i0.ɵɵtemplate(15, WTFIndexerComponent_mat_grid_list_15_Template, 15, 18, \"mat-grid-list\", 6);\n      i0.ɵɵtemplate(16, WTFIndexerComponent_table_16_Template, 22, 4, \"table\", 7);\n      i0.ɵɵtemplate(17, WTFIndexerComponent_table_17_Template, 15, 3, \"table\", 8);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colspan\", 9)(\"rowspan\", 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colspan\", 2)(\"rowspan\", 1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.dataService.backendURL);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colspan\", 1)(\"rowspan\", 1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"colspan\", 11)(\"rowspan\", 1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colspan\", 1)(\"rowspan\", 1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.isLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.isLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.isLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.editingAllowed);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatButton, i5.MatCheckbox, i6.MatFormField, i7.MatGridList, i7.MatGridTile, i8.CdkTextareaAutosize, i9.MatInput, i10.MatPaginator, i11.MatSort, i11.MatSortHeader, i12.MatTable, i12.MatHeaderCellDef, i12.MatHeaderRowDef, i12.MatColumnDef, i12.MatCellDef, i12.MatRowDef, i12.MatHeaderCell, i12.MatCell, i12.MatHeaderRow, i12.MatRow],\n  styles: [\"@media (min-width:350px)  { \\r\\n  mat-paginator.episodePaginator[_ngcontent-%COMP%] {\\r\\n       display:none;\\r\\n  }\\r\\n}\\r\\nmat-grid-list#options[_ngcontent-%COMP%] {\\r\\n     margin-top: 15px;\\r\\n     max-width:500px;\\r\\n}\\r\\n#filter[_ngcontent-%COMP%] {\\r\\n  margin-top: 5px;\\r\\n  max-width: 200px;\\r\\n}\\r\\n\\r\\nmat-paginator.imdbPaginator[_ngcontent-%COMP%] {\\r\\n  left: 900px;\\r\\n  top: 120px;\\r\\n  position: absolute; \\r\\n}\\r\\n\\r\\n  mat-paginator .mat-select-value {\\r\\n  min-width: 30px !important;\\r\\n  max-width: 100px !important;\\r\\n}\\r\\n.episodeTable[_ngcontent-%COMP%] {\\r\\n  overflow: auto;\\r\\n  max-width: 200px;\\r\\n}\\r\\nmat-grid-list.filter[_ngcontent-%COMP%] {\\r\\n  max-width: 250px;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child  {\\r\\n    min-width: 80px;\\r\\n    white-space: wrap;\\r\\n}\\r\\n\\r\\n.cdk-column-Name[_ngcontent-%COMP%] {\\r\\n    min-width:250px;\\r\\n    word-wrap:break-word !important;\\r\\n}\\r\\n\\r\\n.cdk-column-Name[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.cdk-column-Description[_ngcontent-%COMP%] {\\r\\n  word-wrap:break-word !important;\\r\\n  max-width:500px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.cdk-column-ReleaseDate[_ngcontent-%COMP%] {\\r\\n    padding-left: 50px;\\r\\n    min-width:370px;\\r\\n    white-space: wrap !important;\\r\\n}\\r\\n\\r\\n.imdbTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child    + td[_ngcontent-%COMP%] {\\r\\n    white-space: wrap;\\r\\n}\\r\\n\\r\\n.imdbTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child    + td[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\r\\n    white-space: wrap !important;\\r\\n}\\r\\n\\r\\n.imdbTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child    + td[_ngcontent-%COMP%]    + td[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\r\\n    min-width: 300px;\\r\\n    white-space: wrap;\\r\\n}\\r\\n.app-loading[_ngcontent-%COMP%] {\\r\\n    \\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100%;\\r\\n  }\\r\\n.app-loading[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%] {\\r\\n    height: 200px;\\r\\n    width: 200px;\\r\\n    animation: rotate 2s linear infinite;\\r\\n    transform-origin: center center;\\r\\n    position: absolute;\\r\\n    \\r\\n    margin: auto;\\r\\n  }\\r\\n.app-loading[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%]   .path[_ngcontent-%COMP%] {\\r\\n    stroke-dasharray: 1, 200;\\r\\n    stroke-dashoffset: 0;\\r\\n    animation: dash 1.5s ease-in-out infinite;\\r\\n    stroke-linecap: round;\\r\\n    stroke: #ddd;\\r\\n  }\\r\\n@keyframes rotate {\\r\\n    100% {\\r\\n      transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n@keyframes dash {\\r\\n    0% {\\r\\n      stroke-dasharray: 1, 200;\\r\\n      stroke-dashoffset: 0;\\r\\n    }\\r\\n    50% {\\r\\n      stroke-dasharray: 89, 200;\\r\\n      stroke-dashoffset: -35px;\\r\\n    }\\r\\n    100% {\\r\\n      stroke-dasharray: 89, 200;\\r\\n      stroke-dashoffset: -124px;\\r\\n    }\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd0ZmluZGV4ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFO09BQ0ssWUFBWTtFQUNqQjtBQUNGO0FBQ0E7S0FDSyxnQkFBZ0I7S0FDaEIsZUFBZTtBQUNwQjtBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjtBQUNBOzs7OztFQUtFO0FBRUY7RUFDRSxXQUFXO0VBQ1gsVUFBVTtFQUNWLGtCQUFrQjtBQUNwQjtBQUVBLGtGQUFrRjtBQUNsRjtFQUNFLDBCQUEwQjtFQUMxQiwyQkFBMkI7QUFDN0I7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUVBLGlHQUFpRztBQUNqRztJQUNJLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7QUFFQSxpQ0FBaUM7QUFDakM7SUFDSSxlQUFlO0lBQ2YsK0JBQStCO0FBQ25DO0FBRUEsbURBQW1EO0FBQ25EO0lBQ0ksZ0JBQWdCO0lBQ2hCLHVCQUF1QjtBQUMzQjtBQUVBLGlDQUFpQztBQUNqQztFQUNFLCtCQUErQjtFQUMvQixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLHVCQUF1QjtBQUN6QjtBQUVBLGtDQUFrQztBQUNsQztJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsNEJBQTRCO0FBQ2hDO0FBRUEsNkJBQTZCO0FBQzdCO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBRUEseUNBQXlDO0FBQ3pDO0lBQ0ksNEJBQTRCO0FBQ2hDO0FBRUEsNENBQTRDO0FBQzVDO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjtBQUVBO0lBQ0k7O2dCQUVZO0lBQ1osYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLFlBQVk7RUFDZDtBQUNBO0lBQ0UsYUFBYTtJQUNiLFlBQVk7SUFDWixvQ0FBb0M7SUFDcEMsK0JBQStCO0lBQy9CLGtCQUFrQjtJQUNsQjs7O2NBR1U7SUFDVixZQUFZO0VBQ2Q7QUFDQTtJQUNFLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIseUNBQXlDO0lBQ3pDLHFCQUFxQjtJQUNyQixZQUFZO0VBQ2Q7QUFFQTtJQUNFO01BQ0UseUJBQXlCO0lBQzNCO0VBQ0Y7QUFDQTtJQUNFO01BQ0Usd0JBQXdCO01BQ3hCLG9CQUFvQjtJQUN0QjtJQUNBO01BQ0UseUJBQXlCO01BQ3pCLHdCQUF3QjtJQUMxQjtJQUNBO01BQ0UseUJBQXlCO01BQ3pCLHlCQUF5QjtJQUMzQjtFQUNGIiwiZmlsZSI6Ind0ZmluZGV4ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSAobWluLXdpZHRoOjM1MHB4KSAgeyBcclxuICBtYXQtcGFnaW5hdG9yLmVwaXNvZGVQYWdpbmF0b3Ige1xyXG4gICAgICAgZGlzcGxheTpub25lO1xyXG4gIH1cclxufVxyXG5tYXQtZ3JpZC1saXN0I29wdGlvbnMge1xyXG4gICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICAgbWF4LXdpZHRoOjUwMHB4O1xyXG59XHJcblxyXG4jZmlsdGVyIHtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgbWF4LXdpZHRoOiAyMDBweDtcclxufVxyXG4vKlxyXG5tYXQtcGFnaW5hdG9yLmVwaXNvZGVQYWdpbmF0b3Ige1xyXG4gIGxlZnQ6IDBweDtcclxuICB0b3A6IDE3NXB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXHJcbn0qL1xyXG5cclxubWF0LXBhZ2luYXRvci5pbWRiUGFnaW5hdG9yIHtcclxuICBsZWZ0OiA5MDBweDtcclxuICB0b3A6IDEyMHB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXHJcbn1cclxuXHJcbi8qIFdpZGVuIHNlbGVjdCBkcm9wZG93biBpbiBwYWdpbmF0b3IgYmVjYXVzZSBpdHMgdG9vIG5hcnJvdyB3aXRoIDQgZGlnaXQgdmFsdWVzICovXHJcbjo6bmctZGVlcCBtYXQtcGFnaW5hdG9yIC5tYXQtc2VsZWN0LXZhbHVlIHtcclxuICBtaW4td2lkdGg6IDMwcHggIWltcG9ydGFudDtcclxuICBtYXgtd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5lcGlzb2RlVGFibGUge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIG1heC13aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbm1hdC1ncmlkLWxpc3QuZmlsdGVyIHtcclxuICBtYXgtd2lkdGg6IDI1MHB4O1xyXG59XHJcblxyXG4vKiAxc3QgQ29sdW1uIG9mIGJvdGggdGFibGVzIHdoaWNoIGNhbiBiZSB0aGUgc2FtZSB3aWR0aCBzaW5jZSB0aGV5IGJvdGggaGF2ZSBhbiBJRCBpbiBjb2x1bW4gMSAqL1xyXG50YWJsZSB0ciB0ZDpmaXJzdC1jaGlsZCAge1xyXG4gICAgbWluLXdpZHRoOiA4MHB4O1xyXG4gICAgd2hpdGUtc3BhY2U6IHdyYXA7XHJcbn1cclxuXHJcbi8qIE5hbWUgQ29sdW1uIG9mIGVwaXNvZGUgdGFibGUgKi9cclxuLmNkay1jb2x1bW4tTmFtZSB7XHJcbiAgICBtaW4td2lkdGg6MjUwcHg7XHJcbiAgICB3b3JkLXdyYXA6YnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vKiBtYXQtZm9ybSBmaWVsZCBpbiBOYW1lIENvbHVtbiBvZiBlcGlzb2RlIHRhYmxlICovXHJcbi5jZGstY29sdW1uLU5hbWUgbWF0LWZvcm0tZmllbGQge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG59XHJcblxyXG4vKiBEZXNjcmlwdGlvbiBvZiBlcGlzb2RlIHRhYmxlICovXHJcbi5jZGstY29sdW1uLURlc2NyaXB0aW9uIHtcclxuICB3b3JkLXdyYXA6YnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gIG1heC13aWR0aDo1MDBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG59XHJcblxyXG4vKiBSZWxlYXNlIERhdGUgb2YgZXBpc29kZSB0YWJsZSAqL1xyXG4uY2RrLWNvbHVtbi1SZWxlYXNlRGF0ZSB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDUwcHg7XHJcbiAgICBtaW4td2lkdGg6MzcwcHg7XHJcbiAgICB3aGl0ZS1zcGFjZTogd3JhcCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vKiAybmQgQ29sdW1uIG9mIElNREIgdGFibGUgKi9cclxuLmltZGJUYWJsZSB0ciB0ZDpmaXJzdC1jaGlsZCArIHRkIHtcclxuICAgIHdoaXRlLXNwYWNlOiB3cmFwO1xyXG59XHJcblxyXG4vKiBpbnB1dCBmaWVsZCAybmQgQ29sdW1uIG9mIElNREIgdGFibGUgKi9cclxuLmltZGJUYWJsZSB0ciB0ZDpmaXJzdC1jaGlsZCArIHRkIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdoaXRlLXNwYWNlOiB3cmFwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8qIGlucHV0IGZpZWxkIGluIDNyZCBDb2x1bW4gb2YgSU1EQiB0YWJsZSAqL1xyXG4uaW1kYlRhYmxlIHRyIHRkOmZpcnN0LWNoaWxkICsgdGQgKyB0ZCBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xyXG4gICAgd2hpdGUtc3BhY2U6IHdyYXA7XHJcbn1cclxuXHJcbi5hcHAtbG9hZGluZyB7XHJcbiAgICAvKnBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDEyNXB4O1xyXG4gICAgdG9wOi0xMjBweDsqL1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG4gIC5hcHAtbG9hZGluZyAuc3Bpbm5lciB7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgYW5pbWF0aW9uOiByb3RhdGUgMnMgbGluZWFyIGluZmluaXRlO1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8qdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwOyovXHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG4gIC5hcHAtbG9hZGluZyAuc3Bpbm5lciAucGF0aCB7XHJcbiAgICBzdHJva2UtZGFzaGFycmF5OiAxLCAyMDA7XHJcbiAgICBzdHJva2UtZGFzaG9mZnNldDogMDtcclxuICAgIGFuaW1hdGlvbjogZGFzaCAxLjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xyXG4gICAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xyXG4gICAgc3Ryb2tlOiAjZGRkO1xyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIHJvdGF0ZSB7XHJcbiAgICAxMDAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgIH1cclxuICB9XHJcbiAgQGtleWZyYW1lcyBkYXNoIHtcclxuICAgIDAlIHtcclxuICAgICAgc3Ryb2tlLWRhc2hhcnJheTogMSwgMjAwO1xyXG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogMDtcclxuICAgIH1cclxuICAgIDUwJSB7XHJcbiAgICAgIHN0cm9rZS1kYXNoYXJyYXk6IDg5LCAyMDA7XHJcbiAgICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAtMzVweDtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICBzdHJva2UtZGFzaGFycmF5OiA4OSwgMjAwO1xyXG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogLTEyNHB4O1xyXG4gICAgfVxyXG4gIH0iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["MatSort","MatTableDataSource","i0","WTFIndexerComponent","dataService","localStorage","getItem","backendURL","getEpisodes","checkoutAllowed","episodeDisplayedColumns","push","descriptionVisible","splice","filterValue","episodesDataSource","filter","imdbDataSource","epNumber","isCheckedOut","checkEpisodeInOut","subscribe","response","WTFPayload","find","episode","EpisodeNumber","IsCheckedOut","alert","console","log","error","isFavoritesChecked","episodes","filterPredicate","createEpisodeFilter","paginator","episodePaginator","sort","chkFavoritesClick","getIMDBNames","isLoading","delimiter","filterFunction","data","customSearch","found","toString","Name","trim","toLowerCase","includes","ReleaseDate","startsWith","Favorite","IMDBURL","canceled","editingAllowed","pageSize","modifiedWTF","IsModified","modifiedIMDB","IMDBPayload","IMDB","length","updateEpisodes","updateIMDB","isBeingEdited","$event","target","id","obj","IsBeingEdited","parseInt","favoriteValue","updateEpisodeFavorite","applyFilter","getBackEndURL","setItem","isLoaded","IMDBNames","createIMDBFilter","imdbPaginator","favorite","IMDBId","ID","scrapeData","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\245123\\Desktop\\WTFIndexer\\src\\app\\wtfindexer\\wtfindexer.component.ts","C:\\Users\\245123\\Desktop\\WTFIndexer\\src\\app\\wtfindexer\\wtfindexer.component.html"],"sourcesContent":["// to do\r\n// when updating using web app, eps dont reload\r\n// fix imdb items per page not changing the # of viewed items\r\n// finish editing\r\n\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DataService } from '../core/data.service';\r\nimport { IMDBNames, IWTFEpisode } from '../core/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-wtfindexer',\r\n  templateUrl: './wtfindexer.component.html',\r\n  styleUrls: ['./wtfindexer.component.css']\r\n})\r\nexport class WTFIndexerComponent {\r\n  checkoutAllowed = false;\r\n  descriptionVisible = false;\r\n  editingAllowed = true;\r\n  episodesDataSource: MatTableDataSource<any>;\r\n  episodeDisplayedColumns: string[] = ['Episode', 'Name','ReleaseDate','Favorite'];\r\n  filterValue: string;\r\n  imdbDataSource: MatTableDataSource<any>;\r\n  imdbDisplayedColumns: string[] = ['ID', 'Name', 'IMDBURL']; //,'isModified'\r\n  IMDBPayload: IMDBNames[];\r\n  isBeingEdited = false;\r\n  isLoaded = false;\r\n  isLoading = true;\r\n  isFavoritesChecked = false;\r\n  readonly title: string = \"WTF Indexer\"\r\n  WTFPayload : IWTFEpisode[];\r\n\r\n  @ViewChild('episodePaginator') episodePaginator: MatPaginator;\r\n  @ViewChild('imdbPaginator') imdbPaginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  constructor(protected dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n       if (localStorage.getItem('BackEndURL') != null)\r\n            this.dataService.backendURL=localStorage.getItem('BackEndURL');\r\n\r\n       this.getEpisodes();\r\n\r\n       if (this.checkoutAllowed)\r\n            this.episodeDisplayedColumns.push(\"Check In/Out\");\r\n\r\n       if (this.descriptionVisible)\r\n            this.episodeDisplayedColumns.splice(2,0,'Description');\r\n\r\n       /*if (window.outerWidth <= window.outerHeight) {\r\n            alert(\"Please rotate your phone to landscape mode\");\r\n       }*/\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n       this.episodesDataSource.filter = filterValue;\r\n       this.imdbDataSource.filter = filterValue;\r\n  }\r\n\r\n  checkInOutFileClick(epNumber: number,isCheckedOut: boolean) {\r\n     if (epNumber == null)\r\n        return;\r\n\r\n     // get episodes from the data service\r\n     this.dataService.checkEpisodeInOut(epNumber,isCheckedOut)\r\n     .subscribe((response) => {\r\n          this.WTFPayload.find(episode => episode.EpisodeNumber === epNumber).IsCheckedOut=!isCheckedOut;\r\n          /*if (response === false) {\r\n               alert(`Unable to check ${(isCheckedOut == true ? \"in\" : \"out\")} the requested episode`)\r\n               return;\r\n          } else {\r\n               this.WTFPayload.find(episode => episode.EpisodeNumber === epNumber).IsCheckedOut=!isCheckedOut;\r\n          }*/\r\n     },\r\n     error => {\r\n          alert(`An error occurred checking \" + ${(isCheckedOut === false ? \"in\" : \"out\")} + \"the episode`);\r\n\r\n          console.log(`An error occurred ${(isCheckedOut === false ? \"in\" : \"out\")} episode from the data service with error ${error}`)\r\n     });\r\n  }\r\n  \r\n  chkFavoritesClick() {\r\n      this.dataService.getEpisodes(this.isFavoritesChecked)\r\n               .subscribe((episodes: any[]) => {\r\n                    this.WTFPayload = episodes;\r\n\r\n                 // Assign the payload as the table data source\r\n                 this.episodesDataSource=new MatTableDataSource(this.WTFPayload);\r\n\r\n                 // Assign custom filter function\r\n                 this.episodesDataSource.filterPredicate = this.createEpisodeFilter();\r\n     \r\n                 // Assign paginator\r\n                 this.episodesDataSource.paginator = this.episodePaginator;\r\n\r\n                 // Assign sort\r\n                 this.episodesDataSource.sort = this.sort;\r\n\r\n                 if (this.isFavoritesChecked == true) {\r\n                      this.chkFavoritesClick();   \r\n                 }\r\n\r\n                 this.getIMDBNames();\r\n\r\n                 // Apply search filters\r\n                 this.createEpisodeFilter();\r\n               },\r\n       error => {\r\n            alert(\"An error occurred getting the episodes\");\r\n\r\n            console.log(`An error occurred getting the episodes from the data service with error ${error}`);\r\n\r\n            this.isLoading=false;\r\n       });\r\n  }\r\n\r\n  chkShowhideDescription() {\r\n       if (this.descriptionVisible) {\r\n            this.episodeDisplayedColumns.splice(2,0,'Description');\r\n       } else {\r\n          this.episodeDisplayedColumns.splice(2,1);\r\n       }\r\n  }\r\n \r\n  // Custom Material UI table filter function\r\n  createEpisodeFilter() {\r\n       const delimiter: string = \":\";\r\n\r\n       if (this.isLoading)\r\n            return;\r\n\r\n       let filterFunction = function (data: any, filter: string): boolean {\r\n            /*if (typeof this.isFavoritesChecked === 'undefined') {\r\n                console.log(\"null\");\r\n                return null;\r\n            }*/\r\n\r\n            let customSearch = () => {\r\n                 let found = false;\r\n                 \r\n                 // Slows the app down significantly\r\n                 // Custom filter identifiers to search specific columns\r\n                 /*if (filter.indexOf(delimiter) !== -1 && filter.split(delimiter).length == 2) {\r\n                      var filterParams=filter.split(delimiter);\r\n\r\n                      switch(filterParams[0].toLowerCase()) {\r\n                           case \"epnum\":\r\n                                return data.EpisodeNumber === filterParams[1] && (data.isFavoritesChecked === false || (data.isFavoritesChecked === true && parseInt(data.Favorite) === 1));\r\n                           case \"name\":\r\n                                return data.name ===\"\" || (data.Name.includes(filterParams[1]) === true && (data.isFavoritesChecked === false || (data.isFavoritesChecked === true && parseInt(data.Favorite) === 1)));\r\n                           case \"year\":\r\n                                return data.ReleaseDate.includes(\", \" + filterParams[1]) === true && (data.isFavoritesChecked === false || (data.isFavoritesChecked === true && parseInt(data.Favorite) === 1));\r\n                      }\r\n                 } else if (data.EpisodeNumber === filter || data.Name.includes(filter) === true || data.ReleaseDate.indexOf(filter) !== -1) {\r\n                      if (data.isFavoritesChecked === false) {\r\n                           console.log(\"true 1\");\r\n                           found=true;\r\n                      } else if (parseInt(data.Favorite) === 1) {\r\n                           console.log(\"true 2\");\r\n                           found=true;\r\n                      }\r\n                 }/* /*else {\r\n                      if (data.isFavoritesChecked === false) {\r\n                           found=true;\r\n                      } else if (parseInt(data.Favorite) === 1) {\r\n                           found=true;\r\n                      }\r\n                 }*/\r\n\r\n                 // First match the episode number name and/or release date\r\n                 if ((filter == data.EpisodeNumber.toString() || (data.Name.trim() !== \"\" && data.Name.toLowerCase().includes(filter.toLowerCase()) === true) || data.ReleaseDate.toString().startsWith(filter))) {\r\n                      if (this.isFavoritesChecked) {\r\n                         if (this.data.Favorite === true)\r\n                              return true;\r\n                          else\r\n                              return false;\r\n                      } else\r\n                         return true;\r\n                 }\r\n                 \r\n                 return found;\r\n            }\r\n\r\n            return customSearch();\r\n       }\r\n\r\n       return filterFunction;\r\n  }\r\n\r\n  // Custom Material UI table filter function\r\n  createIMDBFilter() {\r\n       const delimiter: string = \":\";\r\n\r\n       let filterFunction = function (data: any, filter: string): boolean {\r\n            let customSearch = () => {\r\n               let found = false;\r\n\r\n               // First match the episode number name and/or release date\r\n               if (data.Name.toLowerCase().includes(filter.toLowerCase()) === true || data.IMDBURL.toLowerCase().includes(filter.toLowerCase()) === true) {\r\n                    found=true;\r\n               }\r\n               \r\n               return found;\r\n          }\r\n\r\n          return customSearch();\r\n     }\r\n\r\n     return filterFunction;\r\n  }\r\n\r\n  editEpisodesIMDBNamesClick(canceled) {\r\n       if (!this.editingAllowed)\r\n            return;\r\n       \r\n       if (this.episodePaginator.pageSize > 100) {\r\n            alert(\"Editing can only be done on 100 or less episodes at a time. Change the items per page to 100 or less\");\r\n            return;\r\n       }\r\n\r\n       if (!canceled) { // Saving\r\n          const modifiedWTF=this.WTFPayload.filter(episode => episode.IsModified === true) \r\n          const modifiedIMDB=this.IMDBPayload.filter(IMDB => IMDB.IsModified === true)\r\n          \r\n          if (modifiedWTF.length > 0) {\r\n               this.dataService.updateEpisodes(modifiedWTF)\r\n               .subscribe(() => {\r\n               },\r\n               error => {\r\n                  alert(\"An error occurred saving the WTF data\");\r\n          \r\n                  console.log(`An error occurred saving the WTF data from the data service with error ${error}`)\r\n               });\r\n          }\r\n\r\n          if (modifiedIMDB.length > 0) {\r\n               this.dataService.updateIMDB(modifiedIMDB)\r\n               .subscribe(() => {\r\n               },\r\n               error => {\r\n                  alert(\"An error occurred saving the IMDB data\");\r\n          \r\n                  console.log(`An error occurred saving the IMDB data from the data service with error ${error}`)\r\n               });\r\n          }\r\n       } else { // Canceling\r\n       }\r\n\r\n       this.getEpisodes();\r\n\r\n       this.getIMDBNames();\r\n\r\n       this.isBeingEdited = !this.isBeingEdited;\r\n  }\r\n\r\n  episodeEditClick($event) {\r\n     const epNumber=$event.target.id;\r\n\r\n     if (epNumber == null)\r\n            return;\r\n\r\n     // Get object based on matching episode number\r\n     let obj = this.WTFPayload.find(episode => episode.EpisodeNumber === epNumber);\r\n\r\n     obj.IsBeingEdited=!obj.IsBeingEdited;\r\n  }\r\n\r\n  episodeFavoriteClick($event) {\r\n       const epNumber=$event.target.id;\r\n       \r\n       if (epNumber == null)\r\n            return;\r\n\r\n       // Get object based on matching episode number\r\n       let obj = this.WTFPayload.find(episode => episode.EpisodeNumber === parseInt(epNumber));\r\n\r\n       const favoriteValue=!obj.Favorite\r\n       \r\n       // Subscribe to data service to update the favorite\r\n       this.dataService.updateEpisodeFavorite(epNumber,favoriteValue)\r\n       .subscribe(() => {\r\n            if (obj.Favorite == null || obj.Favorite == 0)\r\n                 obj.Favorite=1;\r\n            else if (obj.Favorite == 1)\r\n                 obj.Favorite=0;\r\n\r\n            // After updating the favorite, filter the data if favorites is checked because if Favorites is checked and the user unselects a favorite, it will be removed from the filter\r\n            if (this.isFavoritesChecked == true) {\r\n               this.applyFilter(\" \");\r\n            }\r\n       },\r\n       error => {\r\n          alert(\"An error occurred updating the favorite\");\r\n\r\n          console.log(`An error occurred updating the favorite from the data service with error ${error}`)\r\n       });\r\n  }\r\n\r\n  getEpisodes() {\r\n       if (this.dataService.getBackEndURL() === \"\") {\r\n            alert(\"The backend URL is not set\");\r\n            this.isLoading=false;\r\n            return;\r\n       } else {\r\n          localStorage.setItem('BackEndURL',this.dataService.getBackEndURL())\r\n       }\r\n\r\n       this.isLoaded = false;\r\n\r\n       // get episodes from the data service\r\n       this.dataService.getEpisodes(this.isFavoritesChecked)\r\n            .subscribe((episodes: any[]) => {\r\n                 this.isLoading = false;\r\n\r\n                 this.isLoaded = true;\r\n\r\n                 this.WTFPayload = episodes;\r\n\r\n                 // Assign the payload as the table data source\r\n                 this.episodesDataSource=new MatTableDataSource(this.WTFPayload);\r\n\r\n                 // Assign custom filter function\r\n                 this.episodesDataSource.filterPredicate = this.createEpisodeFilter();\r\n     \r\n                 // Assign paginator\r\n                 this.episodesDataSource.paginator = this.episodePaginator;\r\n\r\n                 // Assign sort\r\n                 this.episodesDataSource.sort = this.sort;\r\n\r\n                 if (this.isFavoritesChecked == true) {\r\n                      this.chkFavoritesClick();   \r\n                 }\r\n\r\n                 this.getIMDBNames();\r\n       },\r\n       error => {\r\n            alert(\"An error occurred getting the episodes\");\r\n\r\n            console.log(`An error occurred getting the episodes from the data service with error ${error}`);\r\n\r\n            this.isLoading=false;\r\n       });\r\n  }\r\n\r\n  getIMDBNames() {\r\n       // Get IMDB names\r\n       this.dataService.getIMDBNames()\r\n            .subscribe((IMDBNames: any[]) => {\r\n                 this.IMDBPayload=IMDBNames;\r\n\r\n                 // Assign the payload as the table data source\r\n                 this.imdbDataSource=new MatTableDataSource(this.IMDBPayload);\r\n\r\n                 // Assign custom filter function\r\n                 this.imdbDataSource.filterPredicate = this.createIMDBFilter();\r\n\r\n                 // Assign paginator\r\n                 this.imdbDataSource.paginator = this.imdbPaginator;\r\n\r\n                 /*if (this.isFavoritesChecked == true) {\r\n                      this.chkFavoritesClick();   \r\n                 }*/\r\n       },\r\n       error => {\r\n            alert(\"An error occurred getting the IMDB names\")\r\n\r\n            console.log(`An error occurred getting the IMDB names from the data service with error ${error}`)\r\n       });\r\n  }\r\n \r\n  getEditImage(epNumber : number) {\r\n       if (epNumber == null)\r\n            return;\r\n\r\n       // Get object based on matching episode number\r\n       let obj = this.WTFPayload.find(episode => episode.EpisodeNumber === epNumber);\r\n\r\n       // Return the right image if we are in edit or save mode\r\n       return (obj.IsBeingEdited == true ? \"assets/save.png\" : \"assets/edit.png\");\r\n  }\r\n\r\n  getFavoriteImage(favorite) {\r\n       return (favorite != 1 ? \"assets/heart-outline.png\" : \"assets/heart.png\");\r\n  }\r\n\r\n  IMDBItemUpdated(IMDBId) {\r\n     if (IMDBId === null)\r\n          return;\r\n\r\n     // Get object based on matching episode number\r\n     this.IMDBPayload.find(IMDB => IMDB.ID === IMDBId).IsModified=true;\r\n  }\r\n\r\n  updateButtonClicked() {\r\n     \r\n     \r\n     this.dataService.scrapeData(this.WTFPayload.length)\r\n     .subscribe(() => {\r\n          this.getEpisodes();\r\n\r\n          alert (\"Update is complete\");\r\n     },\r\n     error => {\r\n        alert(\"An error occurred scraping the data\");\r\n\r\n        console.log(`An error occurred scraping the data from the data service with error ${error}`)\r\n     });\r\n  }\r\n\r\n  // Push the status of the Favorites checkbox to the payload so it can be used in the filter\r\n  /*updateFavoriteCheckboxStatus() {\r\n       for (let i=0;i<this.WTFPayload.length;i++) {\r\n            this.WTFPayload[i][\"isFavoritesChecked\"]=this.isFavoritesChecked;\r\n       }\r\n  }*/\r\n\r\n  WTFItemUpdated(epNumber) {\r\n     if (epNumber === null)\r\n          return;\r\n\r\n     // Get object based on matching episode number\r\n     this.WTFPayload.find(episode => episode.EpisodeNumber === epNumber).IsModified=true;\r\n  }\r\n}\r\n","<mat-grid-list id=\"header\" cols=\"12\" rowHeight=\"50px\">\r\n     <mat-grid-tile [colspan]=\"9\" [rowspan]=\"1\">\r\n          <h1>{{ title }}</h1>\r\n     </mat-grid-tile>\r\n\r\n     <mat-grid-tile [colspan]=\"2\" [rowspan]=\"1\">\r\n          <mat-form-field>               \r\n               Backend URL\r\n               <input matInput [(ngModel)]=\"dataService.backendURL\" placeholder=\"Backend URL\">               \r\n          </mat-form-field>\r\n     </mat-grid-tile>\r\n\r\n     <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n          <button id=\"loadButton\" mat-raised-button color=\"primary\" (click)=\"getEpisodes()\">Load</button>\r\n     </mat-grid-tile>\r\n\r\n     <mat-grid-tile [colspan]=\"11\" [rowspan]=\"1\"></mat-grid-tile>\r\n     <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n          <button id=\"updateButton\" *ngIf=\"!isLoading && isLoaded\" mat-raised-button color=\"primary\" (click)=\"updateButtonClicked()\">Update</button>\r\n     </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<mat-grid-list *ngIf=\"isLoading\" cols=\"4\" rowHeight=\"150px\">\r\n     <mat-grid-tile  [colspan]=4 [rowspan]=2>\r\n          <div class=\"app-loading\">\r\n               <span class=\"loading\">Loading...</span>\r\n               <div class=\"logo\"></div>\r\n                                             \r\n               <svg class=\"spinner\" viewBox=\"25 25 50 50\">\r\n                    <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\r\n               </svg>\r\n          </div>\r\n     </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<mat-grid-list *ngIf=\"!isLoading && isLoaded\" id=\"options\" cols=\"11\" rowHeight=\"20px\">\r\n     <mat-grid-tile [colspan]=\"2\" [rowspan]=\"3\">\r\n          <button *ngIf=\"editingAllowed\" id=\"editButton\" mat-raised-button color=\"accent\" (click)=\"editEpisodesIMDBNamesClick()\">{{ (!isBeingEdited ? \"Edit\" : \"Save\") }}</button>\r\n     </mat-grid-tile>\r\n\r\n     <mat-grid-tile *ngIf=\"isBeingEdited\" [colspan]=\"2\" [rowspan]=\"3\">\r\n          <button mat-raised-button style=\"margin-left: 25px;\" color=\"warn\" (click)=\"editEpisodesIMDBNamesClick(true)\">Cancel</button>\r\n      </mat-grid-tile>\r\n\r\n      <mat-grid-tile [colspan]=\"6\" [rowspan]=\"3\"></mat-grid-tile>\r\n\r\n      <mat-grid-tile id=\"filter\" [colspan]=\"5\" [rowspan]=\"3\">\r\n          <mat-form-field *ngIf=\"!isBeingEdited && !isFavoritesChecked\">\r\n               <input matInput [(ngModel)]=\"filterValue\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">     \r\n          </mat-form-field>\r\n     </mat-grid-tile>\r\n\r\n     <mat-grid-tile [colspan]=\"3\" [rowspan]=\"3\">\r\n          <mat-checkbox [(ngModel)]=\"isFavoritesChecked\" id=\"chkFavorites\" (change)=\"chkFavoritesClick()\">Favorites</mat-checkbox>\r\n     </mat-grid-tile>\r\n\r\n     <mat-grid-tile [colspan]=\"3\" [rowspan]=\"3\">\r\n          <mat-checkbox [(ngModel)]=\"descriptionVisible\" id=\"chkShowDescription\" (change)=\"chkShowhideDescription()\">Description</mat-checkbox>\r\n     </mat-grid-tile>\r\n\r\n     <mat-grid-tile [colspan]=\"11\" [rowspan]=\"3\">\r\n          <mat-paginator *ngIf=\"!isLoading\" #episodePaginator class=\"episodePaginator\" [pageSizeOptions]=\"[10000,2,25,50,100]\" showFirstLastButtons></mat-paginator>          \r\n     </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n\r\n<table *ngIf=\"!isLoading && isLoaded\" mat-table matSort [dataSource]=\"episodesDataSource\" class=\"episodeTable mat-elevation-z8\">\r\n     <!-- Episode Number Column -->\r\n     <ng-container matColumnDef=\"Episode\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Ep # </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.EpisodeNumber}} </td>\r\n     </ng-container>\r\n              \r\n     <!-- Name Column -->\r\n     <ng-container ng-class=\"nameColumn\"  matColumnDef=\"Name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n          \r\n          <td mat-cell *matCellDef=\"let element\">\r\n               <div *ngIf=\"!element.IMDBLink && !isBeingEdited\">    \r\n                    {{element.Name}}\r\n               </div>\r\n                    \r\n               <div *ngIf=\"element.IMDBLink && !isBeingEdited\">\r\n                    <div [innerHtml]=\"element.IMDBLink\"></div>\r\n               </div>\r\n                    \r\n               <mat-form-field *ngIf=\"isBeingEdited\">\r\n                    <textarea cdkTextareaAutosize\r\n                         #autosize=\"cdkTextareaAutosize\"\r\n                         cdkAutosizeMinRows=\"1\"\r\n                         cdkAutosizeMaxRows=\"5\"matInput name=\"edit\" (placeholder)=\"Edit\" type=\"text\" value=\"{{element.Name}}\" [(ngModel)]=\"element.Name\"  (change)=\"WTFItemUpdated(element.EpisodeNumber)\" >\r\n                    </textarea>\r\n               </mat-form-field> <!-- keyup)=\"textFieldKeyPressed($event)\"  -->\r\n          </td>\r\n     </ng-container>\r\n \r\n     <!-- Description Column -->\r\n     <ng-container class=\"descriptionColumn\" *ngIf=\"descriptionVisible\" matColumnDef=\"Description\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Description}} </td>\r\n     </ng-container>\r\n              \r\n     <!-- Release Date Column -->\r\n     <ng-container matColumnDef=\"ReleaseDate\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Release Date </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.ReleaseDate}} </td>\r\n     </ng-container>\r\n             \r\n     <!-- Favorite Column -->\r\n     <ng-container matColumnDef=\"Favorite\">  \r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Favorite </th>\r\n          <td mat-cell *matCellDef=\"let element\"><img [src]=\"getFavoriteImage(element.Favorite)\" id=\"{{element.EpisodeNumber}}\" alt=\"Favorite icon\" style=\"width:24px;height:24px\" (change)=\"episodeFavoriteClick($event)\" /></td>\r\n     </ng-container>\r\n\r\n     <!-- Check In/Out Column -->\r\n     <ng-container matColumnDef=\"Check In/Out\">  \r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Check In/Out </th>\r\n          <td mat-cell *matCellDef=\"let element\"><button id=\"checkoutButton\" mat-raised-button color=\"primary\" (click)=\"checkInOutFileClick(element.EpisodeNumber,element.IsCheckedOut)\">{{(element.IsCheckedOut == false ? \"Check Out\" : \"Check In\")}}</button></td>\r\n     </ng-container>\r\n          \r\n     <!-- IsModified Column -->\r\n     <ng-container matColumnDef=\"isModified\">\r\n          <th mat-header-cell *matHeaderCellDef> IsModified </th>\r\n          <td mat-cell *matCellDef=\"let element\"><mat-checkbox disabled checked=\"{{element.IsModified}}\"></mat-checkbox></td>\r\n     </ng-container>\r\n             \r\n     <tr mat-header-row *matHeaderRowDef=\"episodeDisplayedColumns\"></tr>\r\n     <tr mat-row *matRowDef=\"let row; columns: episodeDisplayedColumns;\"></tr>\r\n</table>\r\n\r\n<!--\r\n<mat-paginator *ngIf=\"!isLoading && editingAllowed\" #imdbPaginator class=\"imdbPaginator\" [pageSizeOptions]=\"[10000,2,25,50,100]\" showFirstLastButtons></mat-paginator>\r\n-->\r\n\r\n<table *ngIf=\"!isLoading && editingAllowed\" mat-table [dataSource]=\"imdbDataSource\" class=\"mat-elevation-z8 imdbTable\">\r\n     <!-- ID Column -->\r\n     <ng-container matColumnDef=\"ID\">\r\n          <th mat-header-cell *matHeaderCellDef> ID </th>\r\n          <td mat-cell *matCellDef=\"let element\"> \r\n               {{element.ID}}\r\n          </td>\r\n     </ng-container>\r\n                                  \r\n     <!-- Name Column -->\r\n     <ng-container class=\"imdbInputField\" matColumnDef=\"Name\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n               <div *ngIf=\"!isBeingEdited\">    \r\n                    {{element.Name}}\r\n               </div>\r\n                                   \r\n               <mat-form-field *ngIf=\"isBeingEdited\">\r\n                    <input matInput name=\"name\" (placeholder)=\"Name\" type=\"text\" value=\"{{element.Name}}\" [(ngModel)]=\"element.Name\" (change)=\"IMDBItemUpdated(element.ID)\">\r\n               </mat-form-field> <!-- keyup)=\"textFieldKeyPressed($event)\"  -->\r\n          </td>\r\n     </ng-container>\r\n                              \r\n     <!-- IMDB URL-->\r\n     <ng-container class=\"imdbInputField\" matColumnDef=\"IMDBURL\">\r\n          <th mat-header-cell *matHeaderCellDef> IMDB URL </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n               <div *ngIf=\"!isBeingEdited\">    \r\n                    {{element.IMDBURL}}\r\n               </div>\r\n                                   \r\n               <mat-form-field *ngIf=\"isBeingEdited\">\r\n                    <input matInput name=\"IMDBURL\" (placeholder)=\"IMDB_URL\" type=\"text\" value=\"{{element.IMDBURL}}\" [(ngModel)]=\"element.IMDBURL\" (change)=\"IMDBItemUpdated(element.ID)\">\r\n               </mat-form-field> <!-- keyup)=\"textFieldKeyPressed($event)\"  -->\r\n          </td>\r\n     </ng-container>\r\n                              \r\n     <!-- IsModified Column -->\r\n     <ng-container matColumnDef=\"isModified\">\r\n          <th mat-header-cell *matHeaderCellDef> IsModified </th>\r\n          <td mat-cell *matCellDef=\"let element\"><mat-checkbox disabled checked=\"{{element.IsModified}}\"></mat-checkbox></td>\r\n     </ng-container>\r\n                              \r\n     <tr mat-header-row *matHeaderRowDef=\"imdbDisplayedColumns\"></tr>\r\n     <tr mat-row *matRowDef=\"let row; columns: imdbDisplayedColumns;\"></tr>\r\n</table>"]},"metadata":{},"sourceType":"module"}